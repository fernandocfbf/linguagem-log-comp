Terminals unused in grammar

    COMMA
    DEF
    RETURN


State 62 conflicts: 1 shift/reduce


Grammar

    0 $accept: program $end

    1 program: block

    2 block: LBRACE statement RBRACE

    3 statement: assigment SEMICOLON
    4          | print SEMICOLON
    5          | SEMICOLON
    6          | block
    7          | while
    8          | if

    9 assigment: IDENTIFIER EQUAL relexpression

   10 print: PRINT LPAREN relexpression RPAREN

   11 while: WHILE LPAREN relexpression RPAREN statement

   12 if: IF LPAREN relexpression RPAREN statement else

   13 else: ELSE statement
   14     | %empty

   15 relexpression: term relexpression_part2

   16 relexpression_part2: CEQ expression
   17                    | CGT expression
   18                    | CLT expression
   19                    | %empty

   20 expression: term expression_part2

   21 expression_part2: PLUS term
   22                 | MINUS term
   23                 | OR term
   24                 | %empty

   25 term: factor term_part2

   26 term_part2: MUL factor
   27           | DIV factor
   28           | AND factor
   29           | %empty

   30 factor: PLUS factor
   31       | MINUS factor
   32       | NOT factor
   33       | INTEGER
   34       | IDENTIFIER
   35       | LPAREN relexpression RPAREN
   36       | SCANF LPAREN RPAREN


Terminals, with rules where they appear

    $end (0) 0
    error (256)
    IDENTIFIER (258) 9 34
    INTEGER (259) 33
    EQUAL (260) 9
    CEQ (261) 16
    CLT (262) 18
    CGT (263) 17
    LPAREN (264) 10 11 12 35 36
    RPAREN (265) 10 11 12 35 36
    LBRACE (266) 2
    RBRACE (267) 2
    COMMA (268)
    SEMICOLON (269) 3 4 5
    PLUS (270) 21 30
    MINUS (271) 22 31
    MUL (272) 26
    DIV (273) 27
    NOT (274) 32
    OR (275) 23
    AND (276) 28
    PRINT (277) 10
    SCANF (278) 36
    WHILE (279) 11
    IF (280) 12
    ELSE (281) 13
    DEF (282)
    RETURN (283)


Nonterminals, with rules where they appear

    $accept (29)
        on left: 0
    program (30)
        on left: 1
        on right: 0
    block (31)
        on left: 2
        on right: 1 6
    statement (32)
        on left: 3 4 5 6 7 8
        on right: 2 11 12 13
    assigment (33)
        on left: 9
        on right: 3
    print (34)
        on left: 10
        on right: 4
    while (35)
        on left: 11
        on right: 7
    if (36)
        on left: 12
        on right: 8
    else (37)
        on left: 13 14
        on right: 12
    relexpression (38)
        on left: 15
        on right: 9 10 11 12 35
    relexpression_part2 (39)
        on left: 16 17 18 19
        on right: 15
    expression (40)
        on left: 20
        on right: 16 17 18
    expression_part2 (41)
        on left: 21 22 23 24
        on right: 20
    term (42)
        on left: 25
        on right: 15 20 21 22 23
    term_part2 (43)
        on left: 26 27 28 29
        on right: 25
    factor (44)
        on left: 30 31 32 33 34 35 36
        on right: 25 26 27 28 30 31 32


State 0

    0 $accept: . program $end

    LBRACE  shift, and go to state 1

    program  go to state 2
    block    go to state 3


State 1

    2 block: LBRACE . statement RBRACE

    IDENTIFIER  shift, and go to state 4
    LBRACE      shift, and go to state 1
    SEMICOLON   shift, and go to state 5
    PRINT       shift, and go to state 6
    WHILE       shift, and go to state 7
    IF          shift, and go to state 8

    block      go to state 9
    statement  go to state 10
    assigment  go to state 11
    print      go to state 12
    while      go to state 13
    if         go to state 14


State 2

    0 $accept: program . $end

    $end  shift, and go to state 15


State 3

    1 program: block .

    $default  reduce using rule 1 (program)


State 4

    9 assigment: IDENTIFIER . EQUAL relexpression

    EQUAL  shift, and go to state 16


State 5

    5 statement: SEMICOLON .

    $default  reduce using rule 5 (statement)


State 6

   10 print: PRINT . LPAREN relexpression RPAREN

    LPAREN  shift, and go to state 17


State 7

   11 while: WHILE . LPAREN relexpression RPAREN statement

    LPAREN  shift, and go to state 18


State 8

   12 if: IF . LPAREN relexpression RPAREN statement else

    LPAREN  shift, and go to state 19


State 9

    6 statement: block .

    $default  reduce using rule 6 (statement)


State 10

    2 block: LBRACE statement . RBRACE

    RBRACE  shift, and go to state 20


State 11

    3 statement: assigment . SEMICOLON

    SEMICOLON  shift, and go to state 21


State 12

    4 statement: print . SEMICOLON

    SEMICOLON  shift, and go to state 22


State 13

    7 statement: while .

    $default  reduce using rule 7 (statement)


State 14

    8 statement: if .

    $default  reduce using rule 8 (statement)


State 15

    0 $accept: program $end .

    $default  accept


State 16

    9 assigment: IDENTIFIER EQUAL . relexpression

    IDENTIFIER  shift, and go to state 23
    INTEGER     shift, and go to state 24
    LPAREN      shift, and go to state 25
    PLUS        shift, and go to state 26
    MINUS       shift, and go to state 27
    NOT         shift, and go to state 28
    SCANF       shift, and go to state 29

    relexpression  go to state 30
    term           go to state 31
    factor         go to state 32


State 17

   10 print: PRINT LPAREN . relexpression RPAREN

    IDENTIFIER  shift, and go to state 23
    INTEGER     shift, and go to state 24
    LPAREN      shift, and go to state 25
    PLUS        shift, and go to state 26
    MINUS       shift, and go to state 27
    NOT         shift, and go to state 28
    SCANF       shift, and go to state 29

    relexpression  go to state 33
    term           go to state 31
    factor         go to state 32


State 18

   11 while: WHILE LPAREN . relexpression RPAREN statement

    IDENTIFIER  shift, and go to state 23
    INTEGER     shift, and go to state 24
    LPAREN      shift, and go to state 25
    PLUS        shift, and go to state 26
    MINUS       shift, and go to state 27
    NOT         shift, and go to state 28
    SCANF       shift, and go to state 29

    relexpression  go to state 34
    term           go to state 31
    factor         go to state 32


State 19

   12 if: IF LPAREN . relexpression RPAREN statement else

    IDENTIFIER  shift, and go to state 23
    INTEGER     shift, and go to state 24
    LPAREN      shift, and go to state 25
    PLUS        shift, and go to state 26
    MINUS       shift, and go to state 27
    NOT         shift, and go to state 28
    SCANF       shift, and go to state 29

    relexpression  go to state 35
    term           go to state 31
    factor         go to state 32


State 20

    2 block: LBRACE statement RBRACE .

    $default  reduce using rule 2 (block)


State 21

    3 statement: assigment SEMICOLON .

    $default  reduce using rule 3 (statement)


State 22

    4 statement: print SEMICOLON .

    $default  reduce using rule 4 (statement)


State 23

   34 factor: IDENTIFIER .

    $default  reduce using rule 34 (factor)


State 24

   33 factor: INTEGER .

    $default  reduce using rule 33 (factor)


State 25

   35 factor: LPAREN . relexpression RPAREN

    IDENTIFIER  shift, and go to state 23
    INTEGER     shift, and go to state 24
    LPAREN      shift, and go to state 25
    PLUS        shift, and go to state 26
    MINUS       shift, and go to state 27
    NOT         shift, and go to state 28
    SCANF       shift, and go to state 29

    relexpression  go to state 36
    term           go to state 31
    factor         go to state 32


State 26

   30 factor: PLUS . factor

    IDENTIFIER  shift, and go to state 23
    INTEGER     shift, and go to state 24
    LPAREN      shift, and go to state 25
    PLUS        shift, and go to state 26
    MINUS       shift, and go to state 27
    NOT         shift, and go to state 28
    SCANF       shift, and go to state 29

    factor  go to state 37


State 27

   31 factor: MINUS . factor

    IDENTIFIER  shift, and go to state 23
    INTEGER     shift, and go to state 24
    LPAREN      shift, and go to state 25
    PLUS        shift, and go to state 26
    MINUS       shift, and go to state 27
    NOT         shift, and go to state 28
    SCANF       shift, and go to state 29

    factor  go to state 38


State 28

   32 factor: NOT . factor

    IDENTIFIER  shift, and go to state 23
    INTEGER     shift, and go to state 24
    LPAREN      shift, and go to state 25
    PLUS        shift, and go to state 26
    MINUS       shift, and go to state 27
    NOT         shift, and go to state 28
    SCANF       shift, and go to state 29

    factor  go to state 39


State 29

   36 factor: SCANF . LPAREN RPAREN

    LPAREN  shift, and go to state 40


State 30

    9 assigment: IDENTIFIER EQUAL relexpression .

    $default  reduce using rule 9 (assigment)


State 31

   15 relexpression: term . relexpression_part2

    CEQ  shift, and go to state 41
    CLT  shift, and go to state 42
    CGT  shift, and go to state 43

    $default  reduce using rule 19 (relexpression_part2)

    relexpression_part2  go to state 44


State 32

   25 term: factor . term_part2

    MUL  shift, and go to state 45
    DIV  shift, and go to state 46
    AND  shift, and go to state 47

    $default  reduce using rule 29 (term_part2)

    term_part2  go to state 48


State 33

   10 print: PRINT LPAREN relexpression . RPAREN

    RPAREN  shift, and go to state 49


State 34

   11 while: WHILE LPAREN relexpression . RPAREN statement

    RPAREN  shift, and go to state 50


State 35

   12 if: IF LPAREN relexpression . RPAREN statement else

    RPAREN  shift, and go to state 51


State 36

   35 factor: LPAREN relexpression . RPAREN

    RPAREN  shift, and go to state 52


State 37

   30 factor: PLUS factor .

    $default  reduce using rule 30 (factor)


State 38

   31 factor: MINUS factor .

    $default  reduce using rule 31 (factor)


State 39

   32 factor: NOT factor .

    $default  reduce using rule 32 (factor)


State 40

   36 factor: SCANF LPAREN . RPAREN

    RPAREN  shift, and go to state 53


State 41

   16 relexpression_part2: CEQ . expression

    IDENTIFIER  shift, and go to state 23
    INTEGER     shift, and go to state 24
    LPAREN      shift, and go to state 25
    PLUS        shift, and go to state 26
    MINUS       shift, and go to state 27
    NOT         shift, and go to state 28
    SCANF       shift, and go to state 29

    expression  go to state 54
    term        go to state 55
    factor      go to state 32


State 42

   18 relexpression_part2: CLT . expression

    IDENTIFIER  shift, and go to state 23
    INTEGER     shift, and go to state 24
    LPAREN      shift, and go to state 25
    PLUS        shift, and go to state 26
    MINUS       shift, and go to state 27
    NOT         shift, and go to state 28
    SCANF       shift, and go to state 29

    expression  go to state 56
    term        go to state 55
    factor      go to state 32


State 43

   17 relexpression_part2: CGT . expression

    IDENTIFIER  shift, and go to state 23
    INTEGER     shift, and go to state 24
    LPAREN      shift, and go to state 25
    PLUS        shift, and go to state 26
    MINUS       shift, and go to state 27
    NOT         shift, and go to state 28
    SCANF       shift, and go to state 29

    expression  go to state 57
    term        go to state 55
    factor      go to state 32


State 44

   15 relexpression: term relexpression_part2 .

    $default  reduce using rule 15 (relexpression)


State 45

   26 term_part2: MUL . factor

    IDENTIFIER  shift, and go to state 23
    INTEGER     shift, and go to state 24
    LPAREN      shift, and go to state 25
    PLUS        shift, and go to state 26
    MINUS       shift, and go to state 27
    NOT         shift, and go to state 28
    SCANF       shift, and go to state 29

    factor  go to state 58


State 46

   27 term_part2: DIV . factor

    IDENTIFIER  shift, and go to state 23
    INTEGER     shift, and go to state 24
    LPAREN      shift, and go to state 25
    PLUS        shift, and go to state 26
    MINUS       shift, and go to state 27
    NOT         shift, and go to state 28
    SCANF       shift, and go to state 29

    factor  go to state 59


State 47

   28 term_part2: AND . factor

    IDENTIFIER  shift, and go to state 23
    INTEGER     shift, and go to state 24
    LPAREN      shift, and go to state 25
    PLUS        shift, and go to state 26
    MINUS       shift, and go to state 27
    NOT         shift, and go to state 28
    SCANF       shift, and go to state 29

    factor  go to state 60


State 48

   25 term: factor term_part2 .

    $default  reduce using rule 25 (term)


State 49

   10 print: PRINT LPAREN relexpression RPAREN .

    $default  reduce using rule 10 (print)


State 50

   11 while: WHILE LPAREN relexpression RPAREN . statement

    IDENTIFIER  shift, and go to state 4
    LBRACE      shift, and go to state 1
    SEMICOLON   shift, and go to state 5
    PRINT       shift, and go to state 6
    WHILE       shift, and go to state 7
    IF          shift, and go to state 8

    block      go to state 9
    statement  go to state 61
    assigment  go to state 11
    print      go to state 12
    while      go to state 13
    if         go to state 14


State 51

   12 if: IF LPAREN relexpression RPAREN . statement else

    IDENTIFIER  shift, and go to state 4
    LBRACE      shift, and go to state 1
    SEMICOLON   shift, and go to state 5
    PRINT       shift, and go to state 6
    WHILE       shift, and go to state 7
    IF          shift, and go to state 8

    block      go to state 9
    statement  go to state 62
    assigment  go to state 11
    print      go to state 12
    while      go to state 13
    if         go to state 14


State 52

   35 factor: LPAREN relexpression RPAREN .

    $default  reduce using rule 35 (factor)


State 53

   36 factor: SCANF LPAREN RPAREN .

    $default  reduce using rule 36 (factor)


State 54

   16 relexpression_part2: CEQ expression .

    $default  reduce using rule 16 (relexpression_part2)


State 55

   20 expression: term . expression_part2

    PLUS   shift, and go to state 63
    MINUS  shift, and go to state 64
    OR     shift, and go to state 65

    $default  reduce using rule 24 (expression_part2)

    expression_part2  go to state 66


State 56

   18 relexpression_part2: CLT expression .

    $default  reduce using rule 18 (relexpression_part2)


State 57

   17 relexpression_part2: CGT expression .

    $default  reduce using rule 17 (relexpression_part2)


State 58

   26 term_part2: MUL factor .

    $default  reduce using rule 26 (term_part2)


State 59

   27 term_part2: DIV factor .

    $default  reduce using rule 27 (term_part2)


State 60

   28 term_part2: AND factor .

    $default  reduce using rule 28 (term_part2)


State 61

   11 while: WHILE LPAREN relexpression RPAREN statement .

    $default  reduce using rule 11 (while)


State 62

   12 if: IF LPAREN relexpression RPAREN statement . else

    ELSE  shift, and go to state 67

    ELSE      [reduce using rule 14 (else)]
    $default  reduce using rule 14 (else)

    else  go to state 68


State 63

   21 expression_part2: PLUS . term

    IDENTIFIER  shift, and go to state 23
    INTEGER     shift, and go to state 24
    LPAREN      shift, and go to state 25
    PLUS        shift, and go to state 26
    MINUS       shift, and go to state 27
    NOT         shift, and go to state 28
    SCANF       shift, and go to state 29

    term    go to state 69
    factor  go to state 32


State 64

   22 expression_part2: MINUS . term

    IDENTIFIER  shift, and go to state 23
    INTEGER     shift, and go to state 24
    LPAREN      shift, and go to state 25
    PLUS        shift, and go to state 26
    MINUS       shift, and go to state 27
    NOT         shift, and go to state 28
    SCANF       shift, and go to state 29

    term    go to state 70
    factor  go to state 32


State 65

   23 expression_part2: OR . term

    IDENTIFIER  shift, and go to state 23
    INTEGER     shift, and go to state 24
    LPAREN      shift, and go to state 25
    PLUS        shift, and go to state 26
    MINUS       shift, and go to state 27
    NOT         shift, and go to state 28
    SCANF       shift, and go to state 29

    term    go to state 71
    factor  go to state 32


State 66

   20 expression: term expression_part2 .

    $default  reduce using rule 20 (expression)


State 67

   13 else: ELSE . statement

    IDENTIFIER  shift, and go to state 4
    LBRACE      shift, and go to state 1
    SEMICOLON   shift, and go to state 5
    PRINT       shift, and go to state 6
    WHILE       shift, and go to state 7
    IF          shift, and go to state 8

    block      go to state 9
    statement  go to state 72
    assigment  go to state 11
    print      go to state 12
    while      go to state 13
    if         go to state 14


State 68

   12 if: IF LPAREN relexpression RPAREN statement else .

    $default  reduce using rule 12 (if)


State 69

   21 expression_part2: PLUS term .

    $default  reduce using rule 21 (expression_part2)


State 70

   22 expression_part2: MINUS term .

    $default  reduce using rule 22 (expression_part2)


State 71

   23 expression_part2: OR term .

    $default  reduce using rule 23 (expression_part2)


State 72

   13 else: ELSE statement .

    $default  reduce using rule 13 (else)
