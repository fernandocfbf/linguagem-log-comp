Terminals unused in grammar

    COMMA
    DEF
    RETURN


State 16 conflicts: 2 shift/reduce
State 17 conflicts: 2 shift/reduce
State 18 conflicts: 2 shift/reduce
State 19 conflicts: 2 shift/reduce
State 25 conflicts: 2 shift/reduce
State 42 conflicts: 2 shift/reduce
State 43 conflicts: 2 shift/reduce
State 44 conflicts: 2 shift/reduce
State 66 conflicts: 1 shift/reduce


Grammar

    0 $accept: program $end

    1 program: block

    2 block: LBRACE statement RBRACE

    3 statement: assigment SEMICOLON
    4          | print SEMICOLON
    5          | block
    6          | while
    7          | if
    8          | SEMICOLON

    9 assigment: IDENTIFIER EQUAL relexpression

   10 print: PRINTF LPAREN relexpression RPAREN

   11 while: WHILE LPAREN relexpression RPAREN statement

   12 if: IF LPAREN relexpression RPAREN statement else

   13 else: ELSE statement
   14     | %empty

   15 relexpression: expression CEQ expression
   16              | expression CGT expression
   17              | expression CLT expression
   18              | %empty

   19 expression: term PLUS term
   20           | term MINUS term
   21           | term OR term
   22           | term

   23 term: factor
   24     | factor MUL factor
   25     | factor DIV factor
   26     | factor AND factor
   27     | %empty

   28 factor: PLUS factor
   29       | MINUS factor
   30       | NOT factor
   31       | INTEGER
   32       | IDENTIFIER
   33       | LPAREN relexpression RPAREN
   34       | SCANF LPAREN RPAREN


Terminals, with rules where they appear

    $end (0) 0
    error (256)
    IDENTIFIER (258) 9 32
    INTEGER (259) 31
    EQUAL (260) 9
    CEQ (261) 15
    CLT (262) 17
    CGT (263) 16
    LPAREN (264) 10 11 12 33 34
    RPAREN (265) 10 11 12 33 34
    LBRACE (266) 2
    RBRACE (267) 2
    COMMA (268)
    SEMICOLON (269) 3 4 8
    PLUS (270) 19 28
    MINUS (271) 20 29
    MUL (272) 24
    DIV (273) 25
    NOT (274) 30
    OR (275) 21
    AND (276) 26
    PRINTF (277) 10
    SCANF (278) 34
    WHILE (279) 11
    IF (280) 12
    ELSE (281) 13
    DEF (282)
    RETURN (283)


Nonterminals, with rules where they appear

    $accept (29)
        on left: 0
    program (30)
        on left: 1
        on right: 0
    block (31)
        on left: 2
        on right: 1 5
    statement (32)
        on left: 3 4 5 6 7 8
        on right: 2 11 12 13
    assigment (33)
        on left: 9
        on right: 3
    print (34)
        on left: 10
        on right: 4
    while (35)
        on left: 11
        on right: 6
    if (36)
        on left: 12
        on right: 7
    else (37)
        on left: 13 14
        on right: 12
    relexpression (38)
        on left: 15 16 17 18
        on right: 9 10 11 12 33
    expression (39)
        on left: 19 20 21 22
        on right: 15 16 17
    term (40)
        on left: 23 24 25 26 27
        on right: 19 20 21 22
    factor (41)
        on left: 28 29 30 31 32 33 34
        on right: 23 24 25 26 28 29 30


State 0

    0 $accept: . program $end

    LBRACE  shift, and go to state 1

    program  go to state 2
    block    go to state 3


State 1

    2 block: LBRACE . statement RBRACE

    IDENTIFIER  shift, and go to state 4
    LBRACE      shift, and go to state 1
    SEMICOLON   shift, and go to state 5
    PRINTF      shift, and go to state 6
    WHILE       shift, and go to state 7
    IF          shift, and go to state 8

    block      go to state 9
    statement  go to state 10
    assigment  go to state 11
    print      go to state 12
    while      go to state 13
    if         go to state 14


State 2

    0 $accept: program . $end

    $end  shift, and go to state 15


State 3

    1 program: block .

    $default  reduce using rule 1 (program)


State 4

    9 assigment: IDENTIFIER . EQUAL relexpression

    EQUAL  shift, and go to state 16


State 5

    8 statement: SEMICOLON .

    $default  reduce using rule 8 (statement)


State 6

   10 print: PRINTF . LPAREN relexpression RPAREN

    LPAREN  shift, and go to state 17


State 7

   11 while: WHILE . LPAREN relexpression RPAREN statement

    LPAREN  shift, and go to state 18


State 8

   12 if: IF . LPAREN relexpression RPAREN statement else

    LPAREN  shift, and go to state 19


State 9

    5 statement: block .

    $default  reduce using rule 5 (statement)


State 10

    2 block: LBRACE statement . RBRACE

    RBRACE  shift, and go to state 20


State 11

    3 statement: assigment . SEMICOLON

    SEMICOLON  shift, and go to state 21


State 12

    4 statement: print . SEMICOLON

    SEMICOLON  shift, and go to state 22


State 13

    6 statement: while .

    $default  reduce using rule 6 (statement)


State 14

    7 statement: if .

    $default  reduce using rule 7 (statement)


State 15

    0 $accept: program $end .

    $default  accept


State 16

    9 assigment: IDENTIFIER EQUAL . relexpression

    IDENTIFIER  shift, and go to state 23
    INTEGER     shift, and go to state 24
    LPAREN      shift, and go to state 25
    PLUS        shift, and go to state 26
    MINUS       shift, and go to state 27
    NOT         shift, and go to state 28
    SCANF       shift, and go to state 29

    SEMICOLON  reduce using rule 18 (relexpression)
    PLUS       [reduce using rule 27 (term)]
    MINUS      [reduce using rule 27 (term)]
    $default   reduce using rule 27 (term)

    relexpression  go to state 30
    expression     go to state 31
    term           go to state 32
    factor         go to state 33


State 17

   10 print: PRINTF LPAREN . relexpression RPAREN

    IDENTIFIER  shift, and go to state 23
    INTEGER     shift, and go to state 24
    LPAREN      shift, and go to state 25
    PLUS        shift, and go to state 26
    MINUS       shift, and go to state 27
    NOT         shift, and go to state 28
    SCANF       shift, and go to state 29

    RPAREN    reduce using rule 18 (relexpression)
    PLUS      [reduce using rule 27 (term)]
    MINUS     [reduce using rule 27 (term)]
    $default  reduce using rule 27 (term)

    relexpression  go to state 34
    expression     go to state 31
    term           go to state 32
    factor         go to state 33


State 18

   11 while: WHILE LPAREN . relexpression RPAREN statement

    IDENTIFIER  shift, and go to state 23
    INTEGER     shift, and go to state 24
    LPAREN      shift, and go to state 25
    PLUS        shift, and go to state 26
    MINUS       shift, and go to state 27
    NOT         shift, and go to state 28
    SCANF       shift, and go to state 29

    RPAREN    reduce using rule 18 (relexpression)
    PLUS      [reduce using rule 27 (term)]
    MINUS     [reduce using rule 27 (term)]
    $default  reduce using rule 27 (term)

    relexpression  go to state 35
    expression     go to state 31
    term           go to state 32
    factor         go to state 33


State 19

   12 if: IF LPAREN . relexpression RPAREN statement else

    IDENTIFIER  shift, and go to state 23
    INTEGER     shift, and go to state 24
    LPAREN      shift, and go to state 25
    PLUS        shift, and go to state 26
    MINUS       shift, and go to state 27
    NOT         shift, and go to state 28
    SCANF       shift, and go to state 29

    RPAREN    reduce using rule 18 (relexpression)
    PLUS      [reduce using rule 27 (term)]
    MINUS     [reduce using rule 27 (term)]
    $default  reduce using rule 27 (term)

    relexpression  go to state 36
    expression     go to state 31
    term           go to state 32
    factor         go to state 33


State 20

    2 block: LBRACE statement RBRACE .

    $default  reduce using rule 2 (block)


State 21

    3 statement: assigment SEMICOLON .

    $default  reduce using rule 3 (statement)


State 22

    4 statement: print SEMICOLON .

    $default  reduce using rule 4 (statement)


State 23

   32 factor: IDENTIFIER .

    $default  reduce using rule 32 (factor)


State 24

   31 factor: INTEGER .

    $default  reduce using rule 31 (factor)


State 25

   33 factor: LPAREN . relexpression RPAREN

    IDENTIFIER  shift, and go to state 23
    INTEGER     shift, and go to state 24
    LPAREN      shift, and go to state 25
    PLUS        shift, and go to state 26
    MINUS       shift, and go to state 27
    NOT         shift, and go to state 28
    SCANF       shift, and go to state 29

    RPAREN    reduce using rule 18 (relexpression)
    PLUS      [reduce using rule 27 (term)]
    MINUS     [reduce using rule 27 (term)]
    $default  reduce using rule 27 (term)

    relexpression  go to state 37
    expression     go to state 31
    term           go to state 32
    factor         go to state 33


State 26

   28 factor: PLUS . factor

    IDENTIFIER  shift, and go to state 23
    INTEGER     shift, and go to state 24
    LPAREN      shift, and go to state 25
    PLUS        shift, and go to state 26
    MINUS       shift, and go to state 27
    NOT         shift, and go to state 28
    SCANF       shift, and go to state 29

    factor  go to state 38


State 27

   29 factor: MINUS . factor

    IDENTIFIER  shift, and go to state 23
    INTEGER     shift, and go to state 24
    LPAREN      shift, and go to state 25
    PLUS        shift, and go to state 26
    MINUS       shift, and go to state 27
    NOT         shift, and go to state 28
    SCANF       shift, and go to state 29

    factor  go to state 39


State 28

   30 factor: NOT . factor

    IDENTIFIER  shift, and go to state 23
    INTEGER     shift, and go to state 24
    LPAREN      shift, and go to state 25
    PLUS        shift, and go to state 26
    MINUS       shift, and go to state 27
    NOT         shift, and go to state 28
    SCANF       shift, and go to state 29

    factor  go to state 40


State 29

   34 factor: SCANF . LPAREN RPAREN

    LPAREN  shift, and go to state 41


State 30

    9 assigment: IDENTIFIER EQUAL relexpression .

    $default  reduce using rule 9 (assigment)


State 31

   15 relexpression: expression . CEQ expression
   16              | expression . CGT expression
   17              | expression . CLT expression

    CEQ  shift, and go to state 42
    CLT  shift, and go to state 43
    CGT  shift, and go to state 44


State 32

   19 expression: term . PLUS term
   20           | term . MINUS term
   21           | term . OR term
   22           | term .

    PLUS   shift, and go to state 45
    MINUS  shift, and go to state 46
    OR     shift, and go to state 47

    $default  reduce using rule 22 (expression)


State 33

   23 term: factor .
   24     | factor . MUL factor
   25     | factor . DIV factor
   26     | factor . AND factor

    MUL  shift, and go to state 48
    DIV  shift, and go to state 49
    AND  shift, and go to state 50

    $default  reduce using rule 23 (term)


State 34

   10 print: PRINTF LPAREN relexpression . RPAREN

    RPAREN  shift, and go to state 51


State 35

   11 while: WHILE LPAREN relexpression . RPAREN statement

    RPAREN  shift, and go to state 52


State 36

   12 if: IF LPAREN relexpression . RPAREN statement else

    RPAREN  shift, and go to state 53


State 37

   33 factor: LPAREN relexpression . RPAREN

    RPAREN  shift, and go to state 54


State 38

   28 factor: PLUS factor .

    $default  reduce using rule 28 (factor)


State 39

   29 factor: MINUS factor .

    $default  reduce using rule 29 (factor)


State 40

   30 factor: NOT factor .

    $default  reduce using rule 30 (factor)


State 41

   34 factor: SCANF LPAREN . RPAREN

    RPAREN  shift, and go to state 55


State 42

   15 relexpression: expression CEQ . expression

    IDENTIFIER  shift, and go to state 23
    INTEGER     shift, and go to state 24
    LPAREN      shift, and go to state 25
    PLUS        shift, and go to state 26
    MINUS       shift, and go to state 27
    NOT         shift, and go to state 28
    SCANF       shift, and go to state 29

    PLUS      [reduce using rule 27 (term)]
    MINUS     [reduce using rule 27 (term)]
    $default  reduce using rule 27 (term)

    expression  go to state 56
    term        go to state 32
    factor      go to state 33


State 43

   17 relexpression: expression CLT . expression

    IDENTIFIER  shift, and go to state 23
    INTEGER     shift, and go to state 24
    LPAREN      shift, and go to state 25
    PLUS        shift, and go to state 26
    MINUS       shift, and go to state 27
    NOT         shift, and go to state 28
    SCANF       shift, and go to state 29

    PLUS      [reduce using rule 27 (term)]
    MINUS     [reduce using rule 27 (term)]
    $default  reduce using rule 27 (term)

    expression  go to state 57
    term        go to state 32
    factor      go to state 33


State 44

   16 relexpression: expression CGT . expression

    IDENTIFIER  shift, and go to state 23
    INTEGER     shift, and go to state 24
    LPAREN      shift, and go to state 25
    PLUS        shift, and go to state 26
    MINUS       shift, and go to state 27
    NOT         shift, and go to state 28
    SCANF       shift, and go to state 29

    PLUS      [reduce using rule 27 (term)]
    MINUS     [reduce using rule 27 (term)]
    $default  reduce using rule 27 (term)

    expression  go to state 58
    term        go to state 32
    factor      go to state 33


State 45

   19 expression: term PLUS . term

    IDENTIFIER  shift, and go to state 23
    INTEGER     shift, and go to state 24
    LPAREN      shift, and go to state 25
    PLUS        shift, and go to state 26
    MINUS       shift, and go to state 27
    NOT         shift, and go to state 28
    SCANF       shift, and go to state 29

    $default  reduce using rule 27 (term)

    term    go to state 59
    factor  go to state 33


State 46

   20 expression: term MINUS . term

    IDENTIFIER  shift, and go to state 23
    INTEGER     shift, and go to state 24
    LPAREN      shift, and go to state 25
    PLUS        shift, and go to state 26
    MINUS       shift, and go to state 27
    NOT         shift, and go to state 28
    SCANF       shift, and go to state 29

    $default  reduce using rule 27 (term)

    term    go to state 60
    factor  go to state 33


State 47

   21 expression: term OR . term

    IDENTIFIER  shift, and go to state 23
    INTEGER     shift, and go to state 24
    LPAREN      shift, and go to state 25
    PLUS        shift, and go to state 26
    MINUS       shift, and go to state 27
    NOT         shift, and go to state 28
    SCANF       shift, and go to state 29

    $default  reduce using rule 27 (term)

    term    go to state 61
    factor  go to state 33


State 48

   24 term: factor MUL . factor

    IDENTIFIER  shift, and go to state 23
    INTEGER     shift, and go to state 24
    LPAREN      shift, and go to state 25
    PLUS        shift, and go to state 26
    MINUS       shift, and go to state 27
    NOT         shift, and go to state 28
    SCANF       shift, and go to state 29

    factor  go to state 62


State 49

   25 term: factor DIV . factor

    IDENTIFIER  shift, and go to state 23
    INTEGER     shift, and go to state 24
    LPAREN      shift, and go to state 25
    PLUS        shift, and go to state 26
    MINUS       shift, and go to state 27
    NOT         shift, and go to state 28
    SCANF       shift, and go to state 29

    factor  go to state 63


State 50

   26 term: factor AND . factor

    IDENTIFIER  shift, and go to state 23
    INTEGER     shift, and go to state 24
    LPAREN      shift, and go to state 25
    PLUS        shift, and go to state 26
    MINUS       shift, and go to state 27
    NOT         shift, and go to state 28
    SCANF       shift, and go to state 29

    factor  go to state 64


State 51

   10 print: PRINTF LPAREN relexpression RPAREN .

    $default  reduce using rule 10 (print)


State 52

   11 while: WHILE LPAREN relexpression RPAREN . statement

    IDENTIFIER  shift, and go to state 4
    LBRACE      shift, and go to state 1
    SEMICOLON   shift, and go to state 5
    PRINTF      shift, and go to state 6
    WHILE       shift, and go to state 7
    IF          shift, and go to state 8

    block      go to state 9
    statement  go to state 65
    assigment  go to state 11
    print      go to state 12
    while      go to state 13
    if         go to state 14


State 53

   12 if: IF LPAREN relexpression RPAREN . statement else

    IDENTIFIER  shift, and go to state 4
    LBRACE      shift, and go to state 1
    SEMICOLON   shift, and go to state 5
    PRINTF      shift, and go to state 6
    WHILE       shift, and go to state 7
    IF          shift, and go to state 8

    block      go to state 9
    statement  go to state 66
    assigment  go to state 11
    print      go to state 12
    while      go to state 13
    if         go to state 14


State 54

   33 factor: LPAREN relexpression RPAREN .

    $default  reduce using rule 33 (factor)


State 55

   34 factor: SCANF LPAREN RPAREN .

    $default  reduce using rule 34 (factor)


State 56

   15 relexpression: expression CEQ expression .

    $default  reduce using rule 15 (relexpression)


State 57

   17 relexpression: expression CLT expression .

    $default  reduce using rule 17 (relexpression)


State 58

   16 relexpression: expression CGT expression .

    $default  reduce using rule 16 (relexpression)


State 59

   19 expression: term PLUS term .

    $default  reduce using rule 19 (expression)


State 60

   20 expression: term MINUS term .

    $default  reduce using rule 20 (expression)


State 61

   21 expression: term OR term .

    $default  reduce using rule 21 (expression)


State 62

   24 term: factor MUL factor .

    $default  reduce using rule 24 (term)


State 63

   25 term: factor DIV factor .

    $default  reduce using rule 25 (term)


State 64

   26 term: factor AND factor .

    $default  reduce using rule 26 (term)


State 65

   11 while: WHILE LPAREN relexpression RPAREN statement .

    $default  reduce using rule 11 (while)


State 66

   12 if: IF LPAREN relexpression RPAREN statement . else

    ELSE  shift, and go to state 67

    ELSE      [reduce using rule 14 (else)]
    $default  reduce using rule 14 (else)

    else  go to state 68


State 67

   13 else: ELSE . statement

    IDENTIFIER  shift, and go to state 4
    LBRACE      shift, and go to state 1
    SEMICOLON   shift, and go to state 5
    PRINTF      shift, and go to state 6
    WHILE       shift, and go to state 7
    IF          shift, and go to state 8

    block      go to state 9
    statement  go to state 69
    assigment  go to state 11
    print      go to state 12
    while      go to state 13
    if         go to state 14


State 68

   12 if: IF LPAREN relexpression RPAREN statement else .

    $default  reduce using rule 12 (if)


State 69

   13 else: ELSE statement .

    $default  reduce using rule 13 (else)
